type Address = `0x${string}`;
type Chain = {
    /** ID in number form */
    id: bigint;
    /** Human-readable name */
    name: string;
    /** Internal network name */
    network: string;
    /** Currency used by the chain */
    nativeCurrency: NativeCurrency;
    /** Collection of RPC endpoints */
    rpcUrls: {
        [key: string]: RpcUrls;
        default: RpcUrls;
        public: RpcUrls;
    };
    /** Flag for testnet networks */
    testnet?: boolean;
};
type NativeCurrency = {
    /** Token address */
    address: Address;
    /** Human-readable name */
    name: string;
    /** Currency symbol */
    symbol: string;
    /** Number of decimals */
    decimals: number;
};
type RpcUrls = {
    http: readonly string[];
    websocket?: readonly string[];
};

declare const mainnet: {
    readonly id: bigint;
    readonly network: "mainnet";
    readonly name: "Starknet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly alchemy: {
            readonly http: readonly ["https://starknet-mainnet.g.alchemy.com/v2"];
        };
        readonly infura: {
            readonly http: readonly ["https://starknet-mainnet.infura.io/v3"];
        };
        readonly lava: {
            readonly http: readonly ["https://g.w.lavanet.xyz:443/gateway/strk/rpc-http"];
        };
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.starknet.lava.build"];
        };
    };
};
declare const goerli: {
    readonly id: bigint;
    readonly network: "goerli";
    readonly name: "Starknet Testnet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly testnet: true;
    readonly rpcUrls: {
        readonly alchemy: {
            readonly http: readonly ["https://starknet-goerli.g.alchemy.com/v2"];
        };
        readonly infura: {
            readonly http: readonly ["https://starknet-goerli.infura.io/v3"];
        };
        readonly lava: {
            readonly http: readonly ["https://g.w.lavanet.xyz:443/gateway/strkt/rpc-http"];
        };
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["https://rpc.starknet-testnet.lava.build"];
        };
    };
};

declare const devnet: {
    readonly id: bigint;
    readonly network: "devnet";
    readonly name: "Starknet Devnet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly testnet: true;
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["http://localhost:5050/rpc"];
        };
    };
};

export { Address, Chain, NativeCurrency, RpcUrls, devnet, goerli, mainnet };
