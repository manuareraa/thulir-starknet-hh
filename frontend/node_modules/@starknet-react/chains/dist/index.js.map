{"version":3,"sources":["../src/starknet.ts","../src/devnet.ts"],"sourcesContent":["import { Chain } from \"./types\";\n\n// Starknet chain ids are generated as follows:\n//\n// 1. Take the name of the network as string (SN_MAIN, SN_GOERLI, SN_GOERLI2).\n// 2. Encode it as Starknet short string.\n//\n// For example, `encodeShortString('SN_MAIN')` returns `0x535f4d41494e`, which\n// is the chain id.\n\nexport const mainnet = {\n  id: BigInt(\"0x534e5f4d41494e\"),\n  network: \"mainnet\",\n  name: \"Starknet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n\n  rpcUrls: {\n    alchemy: {\n      http: [\"https://starknet-mainnet.g.alchemy.com/v2\"],\n    },\n    infura: {\n      http: [\"https://starknet-mainnet.infura.io/v3\"],\n    },\n    lava: {\n      http: [\"https://g.w.lavanet.xyz:443/gateway/strk/rpc-http\"],\n    },\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\"https://rpc.starknet.lava.build\"],\n    },\n  },\n} as const satisfies Chain;\n\nexport const goerli = {\n  id: BigInt(\"0x534e5f474f45524c49\"),\n  network: \"goerli\",\n  name: \"Starknet Testnet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  testnet: true,\n  rpcUrls: {\n    alchemy: {\n      http: [\"https://starknet-goerli.g.alchemy.com/v2\"],\n    },\n    infura: {\n      http: [\"https://starknet-goerli.infura.io/v3\"],\n    },\n    lava: {\n      http: [\"https://g.w.lavanet.xyz:443/gateway/strkt/rpc-http\"],\n    },\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\"https://rpc.starknet-testnet.lava.build\"],\n    },\n  },\n} as const satisfies Chain;\n","import { Chain } from \"./types\";\n\nexport const devnet = {\n  id: BigInt(\"0x534e5f474f45524c49\"),\n  network: \"devnet\",\n  name: \"Starknet Devnet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  testnet: true,\n  rpcUrls: {\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\"http://localhost:5050/rpc\"],\n    },\n  },\n} as const satisfies Chain;\n"],"mappings":";AAUO,IAAM,UAAU;AAAA,EACrB,IAAI,OAAO,kBAAkB;AAAA,EAC7B,SAAS;AAAA,EACT,MAAM;AAAA,EACN,gBAAgB;AAAA,IACd,SACE;AAAA,IACF,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAAA,EAEA,SAAS;AAAA,IACP,SAAS;AAAA,MACP,MAAM,CAAC,2CAA2C;AAAA,IACpD;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,uCAAuC;AAAA,IAChD;AAAA,IACA,MAAM;AAAA,MACJ,MAAM,CAAC,mDAAmD;AAAA,IAC5D;AAAA,IACA,SAAS;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,iCAAiC;AAAA,IAC1C;AAAA,EACF;AACF;AAEO,IAAM,SAAS;AAAA,EACpB,IAAI,OAAO,sBAAsB;AAAA,EACjC,SAAS;AAAA,EACT,MAAM;AAAA,EACN,gBAAgB;AAAA,IACd,SACE;AAAA,IACF,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,EACT,SAAS;AAAA,IACP,SAAS;AAAA,MACP,MAAM,CAAC,0CAA0C;AAAA,IACnD;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,sCAAsC;AAAA,IAC/C;AAAA,IACA,MAAM;AAAA,MACJ,MAAM,CAAC,oDAAoD;AAAA,IAC7D;AAAA,IACA,SAAS;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,yCAAyC;AAAA,IAClD;AAAA,EACF;AACF;;;ACpEO,IAAM,SAAS;AAAA,EACpB,IAAI,OAAO,sBAAsB;AAAA,EACjC,SAAS;AAAA,EACT,MAAM;AAAA,EACN,gBAAgB;AAAA,IACd,SACE;AAAA,IACF,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAAA,EACA,SAAS;AAAA,EACT,SAAS;AAAA,IACP,SAAS;AAAA,MACP,MAAM,CAAC;AAAA,IACT;AAAA,IACA,QAAQ;AAAA,MACN,MAAM,CAAC,2BAA2B;AAAA,IACpC;AAAA,EACF;AACF;","names":[]}